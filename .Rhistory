head(InsectSprays, 15)
InsectSprays$A
sB
sB
summary(InsectSprays[,2])
sapply(InsectSpray)
sapply(InsectSpray, class)
help
sapply(InsectSprays, class)
fit <- lm(count~spray, InsectSprays)
fit$coef
summary(fit)$coef
est <- fit[,1]
help
est <- summary(fit)$coef[,1]
mean(sA)
mean(sprayB)
mean(sB)
nfit <- (count~spray -`)
1
34
sd;
shdf
()
[]
sdf
sdfsdf
help
()
library(swirl)
swirl()
help
nfit <- lm(count ~ spray -1, InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, C)
help
spray2 <- relevel(InsectSprays$spray, \"C\")
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,"C\")
lk;
library(swirl)
swirl()
spray2 <- relevel(InsectSprays$spray,"C\")
\
library(swirl)
swirl()
spray2 <- relevel(InsectSprays$spray, ref="C")
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,\"C")
spray2 <- relevel(InsectSprays$spray,"C")
help
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)
summary(fit2)$coef
mean(sC)
fit$coef[2]-fit$coef[3]
(fit$coef[2]-fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
fit <- lm(hunger, year)
help
fit <- lm(hunger$Numeric ~ hunger$Year)
summary(fit)$coef
lmF <- x[hunger]
help
lmF <- lm(Numeric[Sex=="Female"] ~ Year[Sex=="Female"],hunger)
lmM <- lm(Numeric[Sex=="Male"] ~ Year[Sex=="Male"],hunger)
lmBoth <- lm(Numeric[Sex=="Male"] ~ Year[Sex=="Male"],hunger)
lmBoth <- lm(Numeric ~ Year+Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
fit <- lm(y ~ x, out2)
plot(fit, which=1)
help()
fitno <- lm(y~x, out2[-1,1])
fitno <- lm(y ~ x, out2[-1, ])
help()
plot(fitno, which =1)
coef(fit)-coef(fitno)
head(dfbeta(fit))
resno <- out2[1,"y"] - predict(fitno, out2[1,])
1 - resid(fit)[1]
1 - resid(fit)[1]/resno
head(hatvalues(fit))
help
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd
help
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
had(cbind(rstd, rstandard(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which = 3)
help
plot(fit, which=2)
sigma1 <- deviance(fitno) / residual
help
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1 * sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
predict(fit,out2)
dy <- predict(fitno, out2)-predict(fit,out2)
help
sum(dy^2)/(2*sigma^2)
plot(fit,which=5)
rgp1()
rgp2()
head(swiss)
help
mdl <- lm(Fertility ~ ., swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ . -Examination, swiss)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm (Fertility ~ Agriculture, swiss)
fit3 <- lm (Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
mdl <- glm(ravenWinNum~ravenScore)
help
mdl <- glm (ravenWinNum ~ ravenScore, family = binomial, data=ravenData)
lodds <- predict(mdl, data.frame(raveScore=c(0,3,6)))
lodds <- predict(mdl, data.frame(ravenScore=c(0,3,6)))
predict(exp(lodds)/(1+exp(lodds)))
help
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000,50))
nxt()
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
exp(b1(confint(mdl)))
exp(confint(mdl))
exp(confint(mdl, 'date'))
which.max(hits[,'visits'])
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
mdl2 <- help
swirl()
help
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits, offset = log(visits + 1))
qpois(.95, mdl2$fitted.values[704])
library(httr)
oauth_endpoints("github")
#
myapp <- oauth_app("github", "ClientID", "ClientSecret")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(swirl)
swirl()
which.max(hits[,'visits'])
hits[704,]
lamda <- mdl$fitted.values[704]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
mdl2 <-
gm
help()
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits, offset = log(visits + 1))
qpois(.95, mdl2$fitted.values[704])
sdfs
d
sdf
0
help()
quit()
757.39+637.92
install.packages("~/Downloads/DDPQuiz3_1.0.zip", repos = NULL)
install.packages("~/Downloads/DDPQuiz3_1.0.zip", repos = NULL)
200 * 2.75
200 * 2.7511
install.packages("ape")
install.packages("AppliedPredictiveModeling")
install.packages(c("arm", "BayesX", "bdsmatrix", "BradleyTerry2"))
install.packages(c("ca", "car", "caret", "caTools", "class", "cluster"))
install.packages(c("codetools", "coin", "corrgram", "DBI", "deldir", "deSolve"))
install.packages(c("devtools", "e1071", "Ecdat", "effects", "flexmix", "Formula"))
install.packages(c("gamlss", "gamlss.dist", "geepack", "geoR", "geosphere", "gplots", "gsubfn"))
install.packages(c("heplots", "hexbin", "Hmisc", "HSAUR", "htmltools", "httr", "igraph"))
install.packages(c("ineq", "jsonlite", "KernSmooth", "kinship2", "klaR", "ks", "labeling"))
install.packages(c("Lahman", "lme4", "logcondens", "lpSolve", "maps", "MASS", "Matrix"))
install.packages(c("mboost", "mclust", "mgcv", "mime", "mitools", "MPV", "multcomp", "mvtnorm", "NLP"))
install.packages(c("nor1mix", "np", "optmatch", "party", "pcaPP", "proxy", "pscl", "qdap", "qdapDictionaries", "qdapTools"))
install.packages(c("R.utils", "RandomFields", "randomForest", "RANN", "raster", "rasterVis", "rattle", "Rcpp"))
install.packages(c("RcppArmadillo", "RcppEigen", "RefManageR", "repmis", "rgl", "RItools", "rmarkdown", "rms", "roxygen2", "RUnit"))
install.packages(c("sampleSelection", "sandwich", "sem", "semPlot", "sfsmisc", "shiny", "SimComp", "spam", "SparseM", "spatstat", "spdep", "survey", "swirl", "testthat", "UsingR", "vcd", "XLConnect", "xlsxjars", "xtable", "yaml"))
/opt/shiny-server/ext/pandoc/pandoc --version
sudo ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc-citeproc /usr/local/bin
library("pander", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages(c("aplpack", "boot", "corpcor", "jsonlite", "lavaan", "MASS", "microbenchmark", "mime", "Rcpp", "shiny"))
options(rpubs.upload.method = “internal”)
library("pander", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages(c("data.table", "mboost", "mi", "multcomp", "qdapTools", "quantmod", "RandomFields", "semTools", "shiny", "splancs", "testthat"))
install.packages("pandoc")
knitr::opts_chunk$set(cache=FALSE)
devtools::install_github("yihui/knitr", build_vignettes = FALSE)
install.packages(c("devtools", "nlme", "quantmod", "stringdist"))
devtools::install_github("rstudio/rmarkdown")
4 * -1.25
xelatex -output-driver="xdvipdfmx -V 5" <soc_303_homework_2_SOLUTIONS.md>
28-37
-9/7
7.83-5.80
sqrt(1.0545)
2.03/sqrt(1.0545)
0.78/2
0.078/2
.05 - .039
.025 - .039
.078/2
.05/2
.039 - .025
4 + 4 + 4 + 7
5+1-1+1-2-4
5+1-1+1+2+4
5 + 5 + 7 + 8 + 9 + 7
41/6
10+6+8+7+7+2
10+6+8+7+7+3
10+6+8_7+7+3
10+6+8+7+7+3
9+1+9+1+0+4
sqrt(5)
.039 - .078
.0143 -.025
.038-.025
options(rpubs.upload.method = "internal")
4 + 3 + 2.75 + 2.25 + 5
4 + 3 + 2.75 + 2.25 + 4
16/20
4 + 3 + 2.75 + 2.5 + 4
16.25/20
4+2+3+3+2.75+2.75+4
4+3+3+2.75+2.75+4
19.5/20
2.75+2.75
oil = as.data.frame(rbind(73, 66, 75, 70, 72, 69, 74))
row.names(oil)=c("Bahrain", "Iraq", "Kuwait", "Oman", "Qatar", "Saudi Arabia", "United Arab Emirates")
names(oil)="oil"
oil
dim(oil)
summary(oil)
table(oil)##mode=all numbers appear one time
m.oil=mean(oil$oil);m.oil
sqrt(var(oil$oil))
sd.oil=sd(oil$oil);sd.oil
var(oil$oil)
range(oil$oil)
my.r1 = max(oil$oil)-min(oil$oil); my.r1
4+3+3+3+3+4
4+3+1.5+3+2.75+4
18.25/20
4+3+3+2+2.5+3
17.5/20
4+3+2.75+3+2.95+4
19.7/20
4+3+2.75+3+5+2.95+4
4+3+2.75+3.5+2.95+4
4+3+2.75+3+2.95+4
19.7/20
4
4+3+3+3+2.95+3.95
19.9/20
4
4+3+3+3+2.95+3.95
19.9/20
4+3+3+3+2.95+3.95
4+3+3+1.75+3+3.5
4+3+3+1.75+3+3.5
18.25/20
10+10+10+20+20+10
150-80
10+10+10+20+20+10+25
150-105
10+10+10+20+20+10+20+25
140-25
150-125
150*.9
10+10+10+20+20+10+20+25
5+5+10+20+25+10+25+25+25
6+8
bp = c(120, 116, 104, 102, 105, 112, 104, 111, 107, 100)
mean(bp)
median(bp)
table(bp)
max(bp)
min(bp)
max(bp)-min(bp)
sessions=c(8,7,6,5,4,3,2,1)
mean(sessions)
median(sessions)
max(sessions)-min(sessions)
students=c(3,3,6,5,12,23,14,7)
mean(students)
median(students)
table(students)
max(students)
max(students)-min(students)
college=c(3,  4,  3,  1,  7,  2,  4,  5,  6,  2,  3,  2,  1,  1,  4)
mean(college)
median(college)
table(college)
2.5/5
4+3+3+3+3+4
(8325/((165)^2)/9)/9
(8325-((1.65)^2)/9)
(8325-((1.65)^2)/9)/9
165^2
165^2/9
8325-3025
8325-3025/9
(8325-3025)/9
4+3+1.5+3+2.25+4
17.75/20
4+3+1.5+1.5+1.5+3.75
15.25/20
4+2.75+2.5+2+2+4
17.25/20
4+2+2.5+1.5+2+4
16/20
66+69+70+72+73+74+75
499/7
4+2.75+3+2+2.5+4
4+2.75+3+2+2+4
17.75/20
4+2+3+2+2+4
17/20
4+2+2.5+2+2+4
16.5/20
2+3+1+2.25+3+3
14.25/20
13.25/20
4+3+3+3+2.75+3.75
19.5/20
4+3+3+3+2.95+3.95
19.9/20
4+2.75+3+2.95+2.95+4
19.65/20
4+3+2.75+2+3.75+4
4+3+2.75+2+2.75+4
18.5/20
8 + 6
14/20
777.09+633.98
4+3+2.75+2.95+2.95+4
19.65/20
var(70,55,15,10,5,5,5,0,0,0)
health=c(70,55,15,10,5,5,5,0,0,0)
var(health)
cov(health)
4+3+3+3+2.95+4
19.95/20
health=c(70,55,15,10,5,5,5,0,0)
var(health)
4+3+3+3+2.95+4
19.95/20
4+3+3+2.95+2.75+3.75
19.45/20
3.5+3+3+3+2.25+3
17.75/20
3+3+3+2.95+2.75+4
18.7/20
4+3+2.75+3+4
4+3+2.75+2.75+3+4
19.5/20
32-22
*2
10*2
ch1=10*2
ch4=10*2
21-11
ch5=10*2
22-32
ch6=10*2
43-33
ch7=10*2
a1=2.5
a2=2.5
a3=5
a4=5
rm(c(a1,a2,a3,a4))
ch4=20
ch5=20
ch6=20
ch7=20
a3=2.5
a4=2.7
a4=2.5
a5=5
a6=5
a7=5
ch4+ch5+ch6+ch7+a3+a4+a5+a6+a7
a4=5
ch4+ch5+ch6+ch7+a3+a4+a5+a6+a7
ch4+ch5+ch6+ch7+a3+a4+a5+a6
a3=5
ch4+ch5+ch6+ch7+a3+a4+a5+a6
setwd("~/Google Drive/CSUF_SOC_2014F/sociology303_2014F/weekly_presentations/Week11_Move_Monday11_3_14/ch10")
slidify("index.RMD")
library(slidify)
library(rCharts)
slidify("index.RMD")
slidify("index.RMD")
day=c(5,5,5,3,3,3)
night=c(5,5,5,3,3,3)
anova(day,night)
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
145+115
260/2
580+460
1040/8
160^2
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
41+26+38
105/30
4.1+2.6+3.8
10.5/3
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
slidify("index.RMD")
